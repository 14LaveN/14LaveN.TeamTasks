<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TeamTasks.Identity.Api</name>
    </assembly>
    <members>
        <member name="M:TeamTasks.Identity.Api.Common.DependencyInjection.DiAuthorization.AddAuthorizationExtension(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Registers the necessary services with the DI framework.
            </summary>
            <param name="services">The service collection.</param>
            <param name="configuration">The configuration.</param>
            <returns>The same service collection.</returns>
        </member>
        <member name="M:TeamTasks.Identity.Api.Common.DependencyInjection.DiCaching.AddCaching(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Registers the necessary services with the DI framework.
            </summary>
            <param name="services">The service collection.</param>
            <param name="configuration">The configuration.</param>
            <returns>The same service collection.</returns>
        </member>
        <member name="M:TeamTasks.Identity.Api.Common.DependencyInjection.DiDatabase.AddDatabase(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Registers the necessary services with the DI framework.
            </summary>
            <param name="services">The service collection.</param>
            <param name="configuration">The configuration.</param>
            <param name="environment">The environemnt.</param>
            <returns>The same service collection.</returns>
        </member>
        <member name="M:TeamTasks.Identity.Api.Common.DependencyInjection.DiEndpoints.AddEndpoints(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Reflection.Assembly)">
            <summary>
            Registers the necessary services with the DI framework.
            </summary>
            <param name="services">The service collection.</param>
            <param name="assembly">The assembly.</param>
            <returns>The same service collection.</returns>
        </member>
        <member name="M:TeamTasks.Identity.Api.Common.DependencyInjection.DiEndpoints.MapEndpoints(Microsoft.AspNetCore.Builder.WebApplication,Microsoft.AspNetCore.Routing.RouteGroupBuilder)">
            <summary>
            The map endpoints in some assembly method.
            </summary>
            <param name="app">The web application builder.</param>
            <param name="routeGroupBuilder">The route group builder.</param>
            <returns>Returns the modify application builder.</returns>
        </member>
        <member name="M:TeamTasks.Identity.Api.Common.DependencyInjection.DiLogging.AddLoggingExtension(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Registers the necessary services with the DI framework.
            </summary>
            <param name="services">The service collection.</param>
            <param name="configuration">The configuration.</param>
            <returns>The same service collection.</returns>
        </member>
        <member name="M:TeamTasks.Identity.Api.Common.DependencyInjection.DiMetrics.AddMetricsOpenTelemetry(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Logging.ILoggingBuilder)">
            <summary>
            Registers the necessary services with the DI framework.
            </summary>
            <param name="services">The service collection.</param>
            <param name="loggingBuilder">The logging builder.</param>
            <returns>The same service collection.</returns>
        </member>
        <member name="M:TeamTasks.Identity.Api.Common.DependencyInjection.DiSwagger.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Registers the necessary services with the DI framework.
            </summary>
            <param name="services">The service collection.</param>
            <returns>The same service collection.</returns>
        </member>
    </members>
</doc>
